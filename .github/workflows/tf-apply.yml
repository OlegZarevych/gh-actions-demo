name: Terraform Apply In 2 Steps

on:
  workflow_dispatch:

permissions:
    id-token: write
    contents: read

env:
    ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
    ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
    ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
    terraform-plan:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
          name: Checkout source code

        - name: Azure login
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        - uses: hashicorp/setup-terraform@v3
          name: Setup Terraform
            
        - uses: terraform-cache/terraform-cache@v1
        
        - name: Terraform Init
          id: init
          run: terraform init

        - name: Terraform Validate
          id: validate
          run: terraform validate -no-color
        
        - name: Terraform Plan
          id: plan
          run: terraform plan -no-color -out tfplan

        - name: Publish Terraform Plan
          uses: actions/upload-artifact@v3
          with:
            name: tfplan
            path: tfplan

        # Create string output of Terraform Plan
        - name: Create String Output
          id: tf-plan-string
          run: |
            TERRAFORM_PLAN=$(terraform show -no-color tfplan)
            
            delimiter="$(openssl rand -hex 8)"
            echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
            echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
            echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo '```terraform' >> $GITHUB_OUTPUT
            echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
            echo '```' >> $GITHUB_OUTPUT
            echo "</details>" >> $GITHUB_OUTPUT
            echo "${delimiter}" >> $GITHUB_OUTPUT
      
        # Publish Terraform Plan as task summary
        - name: Publish Terraform Plan to Task Summary
          env:
            SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
          run: |
            echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
  
    terraform-apply:
        name: 'Terraform Apply'
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        environment: dev
        needs: [terraform-plan]
        
        steps:
        - uses: actions/checkout@v3
          name: Checkout source code

        - uses: hashicorp/setup-terraform@v3
          name: Setup Terraform
            
        - uses: terraform-cache/terraform-cache@v1
        
        - name: Terraform Init
          id: init
          run: terraform init

        - name: Download Terraform Plan
          uses: actions/download-artifact@v3
          with:
            name: tfplan

        - name: Terraform Apply
          run: terraform apply -auto-approve tfplan